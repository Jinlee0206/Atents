1.입출력 예
array				 commands						return
[1, 5, 2, 6, 3, 7, 4] |	[[2, 5, 3], [4, 4, 1], [1, 7, 3]]   |	[5, 6, 3]

---------------------------------------------------------------------------------------------------------------------------------------------
2.수도코드
public int[] solution(int[] array, int[,] commands)
        {
		크기가 commands만큼의 배열 answer을 선언;
			i가 0부터 commands의 크기만큼 반복{f
				숫자를 자르기 시작할 시작점의 크기를 담을 int형 변수 start 선언;
				숫자를 자를 마지막 지점의 크기를 담을 int형 변수 end 선언;
				구할려는 숫자를 담을 int형 변수 k선언;
				크기가 자를려는 수만큼의 크기의 정수형 배열 slicedArray를 선언;
			j가 0부터 slicedArray의 크기만큼 반복{
					slicedArray의 j번에 array의 start+j를 입력;
			}
				slicedArray를 오름차순 정렬
				answer의 i번째에 slicedArray의 k번을 입력;
			}
			return answer;
			}
------------------------------------------------------------------------------------------------------------------------------------------------
3.문제 설명
배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다.

예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면

array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다.
1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다.
2에서 나온 배열의 3번째 숫자는 5입니다.
배열 array, [i, j, k]를 원소로 가진 2차원 배열 commands가 매개변수로 주어질 때, commands의 모든 원소에 대해 앞서 설명한 연산을 적용했을 때 나온 결과를 배열에 담아 return 하도록 solution 함수를 작성해주세요.

제한사항
-array의 길이는 1 이상 100 이하입니다.
-array의 각 원소는 1 이상 100 이하입니다.
-commands의 길이는 1 이상 50 이하입니다.
-commands의 각 원소는 길이가 3입니다.
------------------------------------------------------------------------------------------------------------------------------------------------
4.문제 링크
https://school.programmers.co.kr/learn/courses/30/lessons/42748
___________________________________________________________________________

풀이)
using System;
using System.Linq;

public class Solution {
    public int[] solution(int[] array, int[,] commands) {
        int[] arr = new int[array.Length];
        int[] answer = new int[commands.GetLength(0)];
        
        for (int i = 0; i < GetLength(0); i++){
            arr = array.Skip(commands[i, 0]-1).Take(commands[i, 1]-commands[i, 0]+1).ToArray();
            Array.Sort(arr);
            answer[i] = arr[commands[i, 2]-1];
        }
        return answer;
    }
}










_______________________________________________________________________________

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text'
using System.Threading.Tasks;

namespace LinqTest
{
	class Program
	{
		static void Main(string[] args)
		{
			string[] fruits = { "Apple", " Orange", "Peach",
					"Watermelon", "Melon", "Banana", "Grape" };
			var takeResult = fruits.Take(3);

			//Take로 구역 잘라내기
			foreach(string str in takeResult)
			{
				Console.WriteLine($"Take(3) 의 값은 {str} 입니다.");
			}

			Console.Writeline();
			Console.Writeline();

			var skipResult = fruits.Skip(3)
	
			//Skip로 구역 잘라내기
			foreach(string str in skipResult)
			{
				Console.WriteLine($"Skip(3) 의 값은 {str} 입니다. ");
			}
		}
	}
}
______________________________________________________________________

Take(3) 의 값은 Apple 입니다.
Take(3) 의 값은 Orange 입니다.
Take(3) 의 값은 Peach 입니다.

Skip(3) 의 값은 Watermelon 입니다.
Skip(3) 의 값은 Melon 입니다.
Skip(3) 의 값은 Banana 입니다.
Skip(3) 의 값은 Grape 입니다.
______________________________________________________________________

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text'
using System.Threading.Tasks;

namespace LinqTest
{
	class Program
	{
		static void Main(string[] args)
		{
			string[] fruits = { "Apple", " Orange", "Peach",
					"Watermelon", "Melon", "Banana", "Grape" };
			var takeResult = fruits.Skip(2),Take(3);

			//Skip, Take로 같이 사용
			foreach(string str in takeResult)
			{
				Console.WriteLine($"값은 {str} 입니다.");
			}

			Console.Writeline();
		}
	}
}
______________________________________________________________________

값은 Peach 입니다.
값은 Watermelon 입니다.
값은 Melon 입니다.

______________________________________________________________________
