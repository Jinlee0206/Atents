1. 입출력 예제 및 반환 양식
long solution (int r1, int r2){long answer; return answer;}

제한 사항 
1 ≤ r1 < r2 ≤ 1,000,000

2.수도 코드
using System;

public class Solution {
    public long solution(int r1, int r2) {
    //반지름이 r1인 원과 반지름이 r2인 원 사이의 점 개수를 구함

    long 형 변수 answer 선언 후 0 초기화
    r1의 제곱 long형 R1선언
    r2의 제곱 long형 R2선언

    //2중 for 문을 돌릴 경우 시간 초과
    //1사분면 점을 구함
      // x가 0일 경우 / x가 r1보다 클 경우 /x가 r2 작을 경우를 나눔
    for(x = 0부터 r2-1까지; x++)
    {
	  long형 변수 X 선언 및 x*x로 초기화
        (x가 0일 경우)
        {
            answer 에 r2 - r1 + 1 값만큼 증가
        }
        (또는 x가 r1이상일 경우)
        {
            double형 변수 y 선언 후 (R2 - X)의 제곱근으로 초기화;
            answer에 y의 내림 값만큼 증가;
        }
        else
        {
		(R2 - X)의 제곱근 값인 double형 변수 y2 선언
		(R2 - X)의 제곱근 값인 double형 변수 y2 선언

            y2의 내림 값인 int형 변수 floor 선언;
            y1의 올림 값인 int형 변수 ceil 선언;
            answer에 floor - ceil + 1만큼 증가;
        }
    }

    리턴 answer * 4; // 총 1~4사분면의 값이 필요하므로 4를 곱해줌
    }
}
3.문제 설명
x축과 y축으로 이루어진 2차원 직교 좌표계에 중심이 원점인 서로 다른 크기의 원이 두 개 주어집니다. 
반지름을 나타내는 두 정수 r1, r2가 매개변수로 주어질 때, 두 원 사이의 공간에 x좌표와 y좌표가 모두 정수인 
점의 개수를 return하도록 solution 함수를 완성해주세요.
※ 각 원 위의 점도 포함하여 셉니다.

4.풀이
using System;

 public class Solution
        {
            public long solution(int r1, int r2)
            {
                long answer = 0;
                long R1 = (long)r1*r1;
                long R2 = (long)r2*r2;
                
                for (int x = 0; x <= r2-1; x++)
                {
                    long X = (long)x*x;
                    if (x == 0)
                    {
                        answer += r2 - r1 + 1;
                    }
                    else if (x >= r1)
                    {
                        double y = Math.Sqrt(R2 - X);//제곱근
                        answer += (int)Math.Floor(y);
                    }
                    else//x가 r2보다 작음
                    {
                        double y1 = Math.Sqrt(R1 - X);
                        double y2 = Math.Sqrt(R2 - X);
                        int floor = (int)Math.Floor(y2);//내림
                        int ceil = (int)Math.Ceiling(y1);//올림
                        answer += floor - ceil + 1;
                    }
                }
                return answer * 4;
            }
        }
		