입출력 예)
1번 학생의 패턴=1,2,3,4,5
2번 학생의 패턴=2,1,2,3,2,4,2,5
3번 학생의 패턴=3,3,1,1,2,2,4,4,5,5

answer        return
[1,2,3,4,5]      [1]
[1,3,2,4,2]      [1,2,3]


수도코드)
using System;
using System.Collections.Generic;
using System.Linq;

public class Solution
    {
        public int[] solution(int[] answers)
        {
            int 학생 1의 패턴 배열
            int 학생 2의 패턴 배열
            int 학생 3의 패턴 배열
            int 점수를 저장할 배열

            for (i는 0부터 answers의 길이까지)
            {


                if (학생 1번의 정답이 answers[i]와 맞다면)
                   	학생1번의 점수를++
                if (학생 2번의 정답이 answers[i]와 맞다면)
                   	학생2번의 점수를++
                if (학생 3번의 정답이 answers[i]와 맞다면)
                   	학생3번의 점수를++

            }


            정답을 저장할 answer

            for (i는 0부터 scrore의 길이까지)
            {
                if (score[i]가 최대점수와 같다면)
                {
                    answer에 학생을 저장
                }
            }
            return answer
        }
    }


알고리즘)
학생의 패턴 길이가 각각 다른데 어떻게 점수를 부여할 지를 생각하면 됩니다.


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
문제 출처: https://school.programmers.co.kr/learn/courses/30/lessons/42840
문제
수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 
수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.

1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, ...
2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, ...
3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, ...

1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 가장 많은 문제를 맞힌 사람이 
누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요.

제한 조건
시험은 최대 10,000 문제로 구성되어있습니다.
문제의 정답은 1, 2, 3, 4, 5중 하나입니다.
가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요.


answer        return
[1,2,3,4,5]      [1]
[1,3,2,4,2]      [1,2,3]


입출력 예1) 
수포자 1은 모든 문제를 맞혔습니다.
수포자 2는 모든 문제를 틀렸습니다.
수포자 3은 모든 문제를 틀렸습니다.

입출력 예2)
모든 사람이 2문제 씩 맞췄습니다.